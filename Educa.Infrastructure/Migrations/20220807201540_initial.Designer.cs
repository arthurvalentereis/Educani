// <auto-generated />
using System;
using Educa.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Educa.Infrastructure.Migrations
{
    [DbContext(typeof(EducaDbContext))]
    [Migration("20220807201540_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Educa.Domain.Entities.Escolaridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_escolaridade");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("atualizado_em");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criado_em");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tb_escolaridade", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AtualizadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6943),
                            CriadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6934),
                            Descricao = "Infantil",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            AtualizadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6945),
                            CriadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6945),
                            Descricao = "Fundamental",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            AtualizadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6947),
                            CriadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6946),
                            Descricao = "Médio",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            AtualizadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6948),
                            CriadoEm = new DateTime(2022, 8, 7, 17, 15, 40, 519, DateTimeKind.Local).AddTicks(6947),
                            Descricao = "Superior",
                            Status = true
                        });
                });

            modelBuilder.Entity("Educa.Domain.Entities.HistoricoEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_historico_escolar");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("CaminhoArquivo")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("caminho_arquivo");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criado_em");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("formato");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("tb_historico_escolar", (string)null);
                });

            modelBuilder.Entity("Educa.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("atualizado_em");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("criado_em");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<int>("EscolaridadeId")
                        .HasColumnType("int")
                        .HasColumnName("id_escolaridade");

                    b.Property<int>("HistoricoEscolarId")
                        .HasColumnType("int")
                        .HasColumnName("id_historico_escolar");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sobrenome");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("EscolaridadeId");

                    b.HasIndex("HistoricoEscolarId");

                    b.ToTable("tb_usuarios", (string)null);
                });

            modelBuilder.Entity("Educa.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Educa.Domain.Entities.Escolaridade", "Escolaridade")
                        .WithMany("Usuario")
                        .HasForeignKey("EscolaridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Educa.Domain.Entities.HistoricoEscolar", "HistoricoEscolar")
                        .WithMany("Usuario")
                        .HasForeignKey("HistoricoEscolarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escolaridade");

                    b.Navigation("HistoricoEscolar");
                });

            modelBuilder.Entity("Educa.Domain.Entities.Escolaridade", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Educa.Domain.Entities.HistoricoEscolar", b =>
                {
                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
